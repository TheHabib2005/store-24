generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("NEXT_PUBLIC_DATABASE_URL")
}

model Review {
  comment   String
  title     String
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  Product   Product? @relation(fields: [productId], references: [id])
  productId String?  @db.ObjectId
}

model Orders {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  User   User?   @relation(fields: [userId], references: [id])
  userId String? @db.ObjectId
}

model Product {
  id               String     @id @default(auto()) @map("_id") @db.ObjectId
  brand            String
  category         String
  description      String
  discount_parcent Int
  id_              Int        @map("id")
  images           String[]
  price            Int
  quantity         Int
  /// Multiple data types found: Float: 60%, Int: 40% out of 20 sampled entries
  rating           Json
  reviews          Review[]
  stock            Int
  stringPrice      String
  thumbnail        String
  title            String
  Cart             Cart[]
  WishList         WishList[]
}

model Cart {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  Product   Product? @relation(fields: [productId], references: [id])
  productId String?  @db.ObjectId
}

model WishList {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  Product   Product? @relation(fields: [productId], references: [id])
  productId String?  @db.ObjectId
}

model User {
  id                String     @id @default(auto()) @map("_id") @db.ObjectId
  v                 Int        @map("__v")
  /// Could not determine type: the field only had null or empty values in the sample set.
  createdAt         DateTime   @db.Date
  createing_method  String
  email             String     @unique(map: "email_1")
  isVerifyed        Boolean
  /// Could not determine type: the field only had null or empty values in the sample set.
  orders            Orders[]
  profileImage      String
  /// Could not determine type: the field only had null or empty values in the sample set.
  resetPasswordCode Json?
  updatedAt         DateTime   @db.Date
  username          String     @unique(map: "username_1")
  /// Could not determine type: the field only had null or empty values in the sample set.
  wishLists         Json?
  Review            Review[]
  cart              Cart[]
  ordersId          String     @db.ObjectId
  WishList          WishList[]
}
